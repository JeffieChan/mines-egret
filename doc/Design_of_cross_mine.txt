Design of [cross mine]

//游戏场景
game scene:
	mine feild
	mine
	crosser || sapper(扫雷工兵)
	music
	..miner(布雷工兵)


//基本对象
game Elements Object:
	Mine_feild:
		{	
			base: blocks (基本组成单元)
			len-x: blocks * n
			len-y: blocks * m
		}
	Mine:
		{
			trigger-time: immediatly / delayed (多人游戏属性)
			trigger-weight: one crosser / two crosser (多人游戏属性)
			detectable: yes / no (特殊技能设定属性)
			fake-mine: yes / no (特殊玩法设定属性--用额外生命来探测某一种雷是否会爆炸)
			property-roll: yes / no (随机属性--多人游戏设定)
			mine-image: 
				{
					still images: //静态图像
					boom-tate: //爆炸图像
					boom-sound: //爆炸声音
				}
		}
	Crosser:
		{
			talent: //天赋技能
				{
					extera-life: x //额外生命
					magnetic-induction：x //探测田字形区域
					third-eyes: x //探测日字形区域
					dimension-door: x //随机传送到未探测区域，不会碰到雷
					crystal-gazer: x //使用一次显示前方n枚地雷
					bridge-builder: x //在自己所处blocks向至多两个block搭桥，如果落在雷上，则桥无法搭建，但显示地雷
					talent-copy: [[x,y],[x, y]] types&times//赋值其它技能，限定复制类型个数和每个类型使用次数限制
					...
				}
			character-image: 
				{
					figure1: {
						still-image:	//静态图像
						Casting-action: //施法动作
						casting-sound: //施法声音
						boom-image: //触雷图像
						boom-sound: //触雷声音
					}
					...
				}
		}
		//create a crosser
		var iron_mechanician = new Crosser(talent = bridge-builder, talent-times = 5, character-image = figure1)

	..Miner
		inherit from crosser //增加攻防博弈，是否引入此角色待定


//玩法
game logic:
	
	--叫我独行侠--
	过目不忘: //看过的地图丢了- -
	残图寻宝: //某一区域显示，你得到的是残图 ^_^
	学霸乐园: //答题==额外生命，或答题可以补全某部分地图，学霸就是diao。。
	独创天涯: //看看谁走的远，你可以自己在地图上拾获道具，升级人物了
	
	--多人联机之队友带你飞: //技能组合 + 祭坛复活，找到祭坛即可复活一名队友--
	
	再续前缘: //已经有跳跳虎前辈用绳命给你探了一段路(嗯，跳跳虎成功越过了雷区，他跳过的block都是安全的)
	迷雾森林: //无图模式
	桃花岛: //有木头人走来走去，小心被抓~
	无尽长征路: //看看谁走的远，你可以自己在地图上拾获道具，升级人物了
	...

	--攻防模式--
		资源限制 + 先后手  组合
		太远了，不再展开。。

add 具体设计：


游戏目标
	不踩到地雷，到达指定地点
游戏控制
	游戏参数配置（提供接口给用户界面）
	游戏初始化：
	调用地图生成接口
	调用人物生成接口
	调用地雷初始化接口
	生成地雷坐标和种类,调用地图摆放接口
	生成其他道具物品（如目标位置<范围>，生命+-1道具，技能值—+-1道具），调用地图摆放接口
	调用显示接口显示物品
	监听三大对象状态，来控制游戏（如显示提醒，结束游戏）
	结束游戏
	退出游戏

地图实现接口
	物品图标摆放（在某个坐标点放置某物）map.item = (x,y)
	显示/隐藏地图上物品map.show（item, time)
	
地雷实现接口
	监测人物距离自身距离
	触发（包括立即爆炸和延时爆炸等等）
	生成爆炸范围，根据爆炸范围内是否有人来向人物传递伤害数据
	自身状态变更（推送变更至游戏控制器）

人物实现接口
	组合属性，生成人物
	移动（响应用户事件）
	报告自身位置（推送至地雷，目标位置，地图，游戏控制器）
	技能使用和技能值变更（调用地图和地雷状态以及自身变化接口，如：显示某块区域，引爆地雷，获取区域地雷坐标，改变自身位置等状态）
	自身状态变更（生命值加减，技能值加减..,推送变更至游戏控制器）